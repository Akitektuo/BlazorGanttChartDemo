@inject IJSRuntime JSRuntime;

<div @ref=chartContainer />

<style>
    svg.main {
        overflow: auto;
    }

    line.grid {
        stroke: silver;
        stroke-width: 0.5px;
    }

    text.grid-label {
        fill: silver;
        font-size: 11px;
        font-weight: bold;
    }

    text.year-label {
        fill: gray;
        font-size: 14px;
    }

    text.collapse-all {
        fill: #034596;
        font-size: 12px;
        font-weight: bold;
    }

    text.expand-all {
        fill: silver;
        font-size: 12px;
        font-weight: bold;
    }


    text.category {
        text-anchor: end;
        font-weight: bold;
        fill: #034596;
    }

    text.sublabel {
        text-anchor: end;
        font-size: 14px;
    }

    g.group-clickable {
        user-select: none;
        cursor: pointer;
        fill: transparent;
    }

    rect.period-category {
        fill: #009F9B;
        fill-opacity: 0.2;
        rx: 16;
    }

    rect.period-subcategory {
        fill: #009F9B;
        rx: 12;
    }

    rect.expanded-background {
        fill: #FFFFFF;
        fill-opacity: 0.5;
        rx: 4;
        filter: drop-shadow(0 0 30px #333);
        box-shadow: 0px 3px 5px -1px rgba(0,0,0,0.2), 0px 5px 8px 0px rgba(0,0,0,0.14), 0px 1px 14px 0px rgba(0,0,0,0.12);
    }

    line.now {
        stroke: #FF5510;
        stroke-width: 4px;
        stroke-linecap: round;
    }

    circle.now-circle {
        fill: #FF5510;
    }

    text.now-label {
        fill: #FFFFFF;
        text-anchor: middle;
        dominant-baseline: middle;
        font-size: 10px;
        font-weight: bold;
    }

    line.target-line {
        stroke: #009F9B;
        stroke-width: 1px;
    }

    text.target-text {
        fill: #034596;
        font-size: 11px;
        font-weight: bold;
        text-anchor: start;
    }

    .ripple {
        display: block;
        position: relative;
        overflow: hidden;
        transform: translate3d(0, 0, 0);
    }

    .ripple:after {
        content: "";
        display: block;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        pointer-events: none;
        background-image: radial-gradient(circle, #fff 10%, transparent 10.01%);
        background-repeat: no-repeat;
        background-position: 50%;
        transform: scale(10, 10);
        opacity: 0;
        transition: transform .5s, opacity 1s;
    }

    .ripple:active:after {
        transform: scale(0, 0);
        opacity: .3;
        transition: 0s;
    }
</style>

@code {
    ElementReference chartContainer;

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            JSRuntime.InvokeVoidAsync("buildGantChart", chartContainer);
        }
    }
}